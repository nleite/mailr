7057      
Delivered-To: norberto@10gen.com
Received: by 10.60.24.70 with SMTP id s6csp257526oef;
        Fri, 7 Sep 2012 03:09:11 -0700 (PDT)
Received: by 10.221.0.78 with SMTP id nl14mr6431116vcb.21.1347012551298;
        Fri, 07 Sep 2012 03:09:11 -0700 (PDT)
Return-Path: <mongodb-user+bncCMiCovuoGxDEj6eCBRoEJVvDYw@googlegroups.com>
Received: from mail-vb0-f64.google.com (mail-vb0-f64.google.com [209.85.212.64])
        by mx.google.com with ESMTPS id l9si4467169vdv.108.2012.09.07.03.09.10
        (version=TLSv1/SSLv3 cipher=OTHER);
        Fri, 07 Sep 2012 03:09:11 -0700 (PDT)
Received-SPF: pass (google.com: domain of mongodb-user+bncCMiCovuoGxDEj6eCBRoEJVvDYw@googlegroups.com designates 209.85.212.64 as permitted sender) client-ip=209.85.212.64;
Authentication-Results: mx.google.com; spf=pass (google.com: domain of mongodb-user+bncCMiCovuoGxDEj6eCBRoEJVvDYw@googlegroups.com designates 209.85.212.64 as permitted sender) smtp.mail=mongodb-user+bncCMiCovuoGxDEj6eCBRoEJVvDYw@googlegroups.com; dkim=pass header.i=@googlegroups.com
Received: by vbbff1 with SMTP id ff1sf2041308vbb.29
        for <multiple recipients>; Fri, 07 Sep 2012 03:09:10 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=googlegroups.com; s=20120806;
        h=x-beenthere:received-spf:mime-version:date:message-id:subject:from
         :to:x-original-sender:x-original-authentication-results:reply-to
         :precedence:mailing-list:list-id:x-google-group-id:list-post
         :list-help:list-archive:sender:list-subscribe:list-unsubscribe
         :content-type;
        bh=hkjpKQ52d5X6BsWPY9ZOYQEkxexiQKTr3T53QpCRypE=;
        b=Bach6VjJdRAUg35+EYcHxbdwHVB7P8JnG+w/Davc+V2rmePC+kp0JkjHXckkT+Op7c
         ffdv5xIgvTQUp+RfiBXP6MYxDalS8rp5CEFFTKi6UD7Fgy6GchA7limvhWJG5T7IP5ut
         Kj9Zf0wgXoEs33jQDCrJ4svlTX71NGWR8U6zBjIJgB4nm250e/XAgUoIv73+KHkWoM99
         7m+f1u6G6H1lTg79E8pSnuQx5d3ACfDJt97u4oIs4qD2y7FloCpVd3kX4RhJKdldeH5+
         KIq0NiCdB0V63s9Y0G46Z2wWsi79a6Xrbtb3+3x3jQp0Y21GvJbe+8S6reP+5W2Fj1sj
         RxrA==
Received: by 10.68.195.72 with SMTP id ic8mr1240152pbc.8.1347012550169;
        Fri, 07 Sep 2012 03:09:10 -0700 (PDT)
X-BeenThere: mongodb-user@googlegroups.com
Received: by 10.68.116.38 with SMTP id jt6ls1341407pbb.8.gmail; Fri, 07 Sep
 2012 03:09:08 -0700 (PDT)
Received: by 10.66.76.201 with SMTP id m9mr1066985paw.1.1347012548165;
        Fri, 07 Sep 2012 03:09:08 -0700 (PDT)
Received: by 10.66.76.201 with SMTP id m9mr1066984paw.1.1347012548155;
        Fri, 07 Sep 2012 03:09:08 -0700 (PDT)
Received: from mail-pz0-f48.google.com (mail-pz0-f48.google.com [209.85.210.48])
        by gmr-mx.google.com with ESMTPS id vw9si2159323pbc.2.2012.09.07.03.09.08
        (version=TLSv1/SSLv3 cipher=OTHER);
        Fri, 07 Sep 2012 03:09:08 -0700 (PDT)
Received-SPF: pass (google.com: domain of james.mk.green@gmail.com designates 209.85.210.48 as permitted sender) client-ip=209.85.210.48;
Received: by mail-pz0-f48.google.com with SMTP id z8so1834577dad.7
        for <mongodb-user@googlegroups.com>; Fri, 07 Sep 2012 03:09:08 -0700 (PDT)
MIME-Version: 1.0
Received: by 10.68.221.42 with SMTP id qb10mr9286940pbc.155.1347012548029;
 Fri, 07 Sep 2012 03:09:08 -0700 (PDT)
Received: by 10.68.4.195 with HTTP; Fri, 7 Sep 2012 03:09:07 -0700 (PDT)
Date: Fri, 7 Sep 2012 11:09:07 +0100
Message-ID: <CAMH6+azWa5azps_EphBLpw+id-GEd+0E-=KJ-hz9oMsad7a9Ag@mail.gmail.com>
Subject: [mongodb-user] Per-Field Symmetric Encryption within Java
From: James Green <james.mk.green@gmail.com>
To: mongodb-user <mongodb-user@googlegroups.com>
X-Original-Sender: james.mk.green@gmail.com
X-Original-Authentication-Results: gmr-mx.google.com; spf=pass (google.com:
 domain of james.mk.green@gmail.com designates 209.85.210.48 as permitted
 sender) smtp.mail=james.mk.green@gmail.com; dkim=pass header.i=@gmail.com
Reply-To: mongodb-user@googlegroups.com
Precedence: list
Mailing-list: list mongodb-user@googlegroups.com; contact mongodb-user+owners@googlegroups.com
List-ID: <mongodb-user.googlegroups.com>
X-Google-Group-Id: 1044811755470
List-Post: <http://groups.google.com/group/mongodb-user/post?hl=en_US>, <mailto:mongodb-user@googlegroups.com>
List-Help: <http://groups.google.com/support/?hl=en_US>, <mailto:mongodb-user+help@googlegroups.com>
List-Archive: <http://groups.google.com/group/mongodb-user?hl=en_US>
Sender: mongodb-user@googlegroups.com
List-Subscribe: <http://groups.google.com/group/mongodb-user/subscribe?hl=en_US>,
 <mailto:mongodb-user+subscribe@googlegroups.com>
List-Unsubscribe: <http://groups.google.com/group/mongodb-user/subscribe?hl=en_US>,
 <mailto:googlegroups-manage+1044811755470+unsubscribe@googlegroups.com>
Content-Type: multipart/alternative; boundary=e89a8ff2569c6eee8604c919cca5

--e89a8ff2569c6eee8604c919cca5
Content-Type: text/plain; charset=ISO-8859-1

Hi,

Our app currently works in Glassfish 3 and uses Morphia. We have not yet
hit production. I now have a requirement to encrypt selected fields of some
of my entity models.

An encryption key will exist on a per-customer basis.

Where do I look for doing this stuff? I've only been doing "Java" really
this year so I have a vague awareness of Java having an encryption API. I
see Spring Security and Jasypt exist too.

Ideally, something that operates almost transparently would be great. At
least, apart from setting the key, there ought to be minimal code needed.
Perhaps something in place of Morphia if that opens possibilities.

Thanks for any advice given.

James

-- 
You received this message because you are subscribed to the Google
Groups "mongodb-user" group.
To post to this group, send email to mongodb-user@googlegroups.com
To unsubscribe from this group, send email to
mongodb-user+unsubscribe@googlegroups.com
See also the IRC channel -- freenode.net#mongodb

--e89a8ff2569c6eee8604c919cca5
Content-Type: text/html; charset=ISO-8859-1
Content-Transfer-Encoding: quoted-printable

Hi,<br><br>Our app currently works in Glassfish 3 and uses Morphia. We have=
 not yet hit production. I now have a requirement to encrypt selected field=
s of some of my entity models.<br><br>An encryption key will exist on a per=
-customer basis.<br>
<br>Where do I look for doing this stuff? I&#39;ve only been doing &quot;Ja=
va&quot; really this year so I have a vague awareness of Java having an enc=
ryption API. I see Spring Security and Jasypt exist too.<br><br>Ideally, so=
mething that operates almost transparently would be great. At least, apart =
from setting the key, there ought to be minimal code needed. Perhaps someth=
ing in place of Morphia if that opens possibilities.<br>
<br>Thanks for any advice given.<br><br>James<br><br>

<p></p>

-- <br />
You received this message because you are subscribed to the Google<br />
Groups &quot;mongodb-user&quot; group.<br />
To post to this group, send email to mongodb-user@googlegroups.com<br />
To unsubscribe from this group, send email to<br />
mongodb-user+unsubscribe@googlegroups.com<br />
See also the IRC channel -- freenode.net#mongodb<br />

--e89a8ff2569c6eee8604c919cca5--
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>date-sent</key>
	<real>1347012547</real>
	<key>flags</key>
	<integer>8590195712</integer>
	<key>original-mailbox</key>
	<string>imap://norberto%4010gen.com@imap.gmail.com/mongodb-user</string>
	<key>remote-id</key>
	<string>1955</string>
	<key>subject</key>
	<string>[mongodb-user] Per-Field Symmetric Encryption within Java</string>
</dict>
</plist>
